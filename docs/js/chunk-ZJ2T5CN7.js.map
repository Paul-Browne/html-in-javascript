{
  "version": 3,
  "sources": ["../../src/js/htjs.js"],
  "sourcesContent": ["const allElements = [\"img\",\"area\",\"base\",\"br\",\"col\",\"embed\",\"hr\",\"input\",\"link\",\"meta\",\"param\",\"source\",\"track\",\"wbr\",\"a\",\"abbr\",\"address\",\"article\",\"aside\",\"audio\",\"b\",\"bdi\",\"bdo\",\"blockquote\",\"body\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"div\",\"dl\",\"dt\",\"em\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"html\",\"i\",\"iframe\",\"ins\",\"kbd\",\"label\",\"legend\",\"li\",\"main\",\"map\",\"mark\",\"menu\",\"meter\",\"nav\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"picture\",\"pre\",\"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\",\"slot\",\"small\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"template\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"title\",\"tr\",\"u\",\"ul\",\"var\",\"video\",\"fragment\"]\n\nconst argumentative = (...args) => {\n    let content = [];\n    let attributes = {};\n    for (let i = 0; i < args.length; i++) {\n        if(typeof args[i] === 'object'){\n            attributes = {\n                ...attributes,\n                ...args[i]\n            }\n        }else if(typeof args[i] === 'string'){\n            content.push(args[i])\n        }else if(typeof args[i] === 'function'){\n            /* \n                only works for function declarations\n                eg. function myFunction(){} \n            */\n            if(args[i].name){\n                console.log(args[i])\n                // content.push(`${args[i]()}`)\n                content.push(`${args[i]}`)\n            }\n        }            \n    }\n    return {\n        content: content.join(''),\n        attributes: Object.keys(attributes).map(key => {\n            if(typeof attributes[key] === 'function'){\n                return ` ${key}=\"(${attributes[key]})()\"`;\n            }\n            return ` ${key}=\"${attributes[key]}\"`;\n        }).join('')\n    }\n}\n\nconst htjs = allElements.reduce((acc, element) => {\n    const closingTag = allElements.indexOf(element) > 13 ? `</${element}>` : \"\";\n    acc[element] = (...args) => {\n        const { content, attributes } = argumentative(...args);\n        if(element == \"fragment\") return content\n        return `<${element}${attributes}>${content}${closingTag}`;\n    }\n    return acc;\n}, {})\n\nexport default htjs\n\n/*\n// Singletons\nexport function img(...args){\n    const { attributes } = argumentative(...args);\n    return `<img${attributes}>`;\n}\nexport function area(...args){\n    const { attributes } = argumentative(...args);\n    return `<area${attributes}>`;\n}\nexport function base(...args){\n    const { attributes } = argumentative(...args);\n    return `<base${attributes}>`;\n}\nexport function br(...args){\n    const { attributes } = argumentative(...args);\n    return `<br${attributes}>`;\n}\nexport function col(...args){\n    const { attributes } = argumentative(...args);\n    return `<col${attributes}>`;\n}\nexport function embed(...args){\n    const { attributes } = argumentative(...args);\n    return `<embed${attributes}>`;\n}\nexport function hr(...args){\n    const { attributes } = argumentative(...args);\n    return `<hr${attributes}>`;\n}\nexport function input(...args){\n    const { attributes } = argumentative(...args);\n    return `<input${attributes}>`;\n}\nexport function link(...args){\n    const { attributes } = argumentative(...args);\n    return `<link${attributes}>`;\n}\nexport function meta(...args){\n    const { attributes } = argumentative(...args);\n    return `<meta${attributes}>`;\n}\nexport function param(...args){\n    const { attributes } = argumentative(...args);\n    return `<param${attributes}>`;\n}\nexport function source(...args){\n    const { attributes } = argumentative(...args);\n    return `<source${attributes}>`;\n}\nexport function track(...args){\n    const { attributes } = argumentative(...args);\n    return `<track${attributes}>`;\n}\nexport function wbr(...args){\n    const { attributes } = argumentative(...args);\n    return `<wbr${attributes}>`;\n}\n// Elements\nexport function a(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<a${attributes}>${content}</a>`;\n}\nexport function abbr(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<abbr${attributes}>${content}</abbr>`;\n}\nexport function address(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<address${attributes}>${content}</address>`;\n}\nexport function article(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<article${attributes}>${content}</article>`;\n}\nexport function aside(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<aside${attributes}>${content}</aside>`;\n}\nexport function audio(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<audio${attributes}>${content}</audio>`;\n}\nexport function b(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<b${attributes}>${content}</b>`;\n}\nexport function bdi(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<bdi${attributes}>${content}</bdi>`;\n}\nexport function bdo(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<bdo${attributes}>${content}</bdo>`;\n}\nexport function blockquote(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<blockquote${attributes}>${content}</blockquote>`;\n}\nexport function body(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<body${attributes}>${content}</body>`;\n}\nexport function button(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<button${attributes}>${content}</button>`;\n}\nexport function canvas(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<canvas${attributes}>${content}</canvas>`;\n}\nexport function caption(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<caption${attributes}>${content}</caption>`;\n}\nexport function cite(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<cite${attributes}>${content}</cite>`;\n}\nexport function code(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<code${attributes}>${content}</code>`;\n}\nexport function colgroup(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<colgroup${attributes}>${content}</colgroup>`;\n}\nexport function data(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<data${attributes}>${content}</data>`;\n}\nexport function datalist(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<datalist${attributes}>${content}</datalist>`;\n}\nexport function dd(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<dd${attributes}>${content}</dd>`;\n}\nexport function del(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<del${attributes}>${content}</del>`;\n}\nexport function details(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<details${attributes}>${content}</details>`;\n}\nexport function dfn(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<dfn${attributes}>${content}</dfn>`;\n}\nexport function dialog(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<dialog${attributes}>${content}</dialog>`;\n}\nexport function div(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<div${attributes}>${content}</div>`;\n}\nexport function dl(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<dl${attributes}>${content}</dl>`;\n}\nexport function dt(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<dt${attributes}>${content}</dt>`;\n}\nexport function em(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<em${attributes}>${content}</em>`;\n}\nexport function fieldset(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<fieldset${attributes}>${content}</fieldset>`;\n}\nexport function figcaption(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<figcaption${attributes}>${content}</figcaption>`;\n}\nexport function figure(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<figure${attributes}>${content}</figure>`;\n}\nexport function footer(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<footer${attributes}>${content}</footer>`;\n}\nexport function form(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<form${attributes}>${content}</form>`;\n}\nexport function h1(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<h1${attributes}>${content}</h1>`;\n}\nexport function h2(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<h2${attributes}>${content}</h2>`;\n}\nexport function h3(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<h3${attributes}>${content}</h3>`;\n}\nexport function h4(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<h4${attributes}>${content}</h4>`;\n}\nexport function h5(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<h5${attributes}>${content}</h5>`;\n}\nexport function h6(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<h6${attributes}>${content}</h6>`;\n}\nexport function head(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<head${attributes}>${content}</head>`;\n}\nexport function header(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<header${attributes}>${content}</header>`;\n}\nexport function html(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<html${attributes}>${content}</html>`;\n}\nexport function i(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<i${attributes}>${content}</i>`;\n}\nexport function iframe(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<iframe${attributes}>${content}</iframe>`;\n}\nexport function ins(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<ins${attributes}>${content}</ins>`;\n}\nexport function kbd(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<kbd${attributes}>${content}</kbd>`;\n}\nexport function label(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<label${attributes}>${content}</label>`;\n}\nexport function legend(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<legend${attributes}>${content}</legend>`;\n}\nexport function li(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<li${attributes}>${content}</li>`;\n}\nexport function main(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<main${attributes}>${content}</main>`;\n}\nexport function map(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<map${attributes}>${content}</map>`;\n}\nexport function mark(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<mark${attributes}>${content}</mark>`;\n}\nexport function menu(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<menu${attributes}>${content}</menu>`;\n}\nexport function meter(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<meter${attributes}>${content}</meter>`;\n}\nexport function nav(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<nav${attributes}>${content}</nav>`;\n}\nexport function noscript(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<noscript${attributes}>${content}</noscript>`;\n}\nexport function object(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<object${attributes}>${content}</object>`;\n}\nexport function ol(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<ol${attributes}>${content}</ol>`;\n}\nexport function optgroup(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<optgroup${attributes}>${content}</optgroup>`;\n}\nexport function option(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<option${attributes}>${content}</option>`;\n}\nexport function output(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<output${attributes}>${content}</output>`;\n}\nexport function p(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<p${attributes}>${content}</p>`;\n}\nexport function picture(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<picture${attributes}>${content}</picture>`;\n}\nexport function pre(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<pre${attributes}>${content}</pre>`;\n}\nexport function progress(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<progress${attributes}>${content}</progress>`;\n}\nexport function q(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<q${attributes}>${content}</q>`;\n}\nexport function rp(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<rp${attributes}>${content}</rp>`;\n}\nexport function rt(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<rt${attributes}>${content}</rt>`;\n}\nexport function ruby(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<ruby${attributes}>${content}</ruby>`;\n}\nexport function s(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<s${attributes}>${content}</s>`;\n}\nexport function samp(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<samp${attributes}>${content}</samp>`;\n}\nexport function script(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<script${attributes}>${content}</script>`;\n}\nexport function section(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<section${attributes}>${content}</section>`;\n}\nexport function select(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<select${attributes}>${content}</select>`;\n}\nexport function slot(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<slot${attributes}>${content}</slot>`;\n}\nexport function small(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<small${attributes}>${content}</small>`;\n}\nexport function span(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<span${attributes}>${content}</span>`;\n}\nexport function strong(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<strong${attributes}>${content}</strong>`;\n}\nexport function style(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<style${attributes}>${content}</style>`;\n}\nexport function sub(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<sub${attributes}>${content}</sub>`;\n}\nexport function summary(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<summary${attributes}>${content}</summary>`;\n}\nexport function sup(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<sup${attributes}>${content}</sup>`;\n}\nexport function table(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<table${attributes}>${content}</table>`;\n}\nexport function tbody(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<tbody${attributes}>${content}</tbody>`;\n}\nexport function td(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<td${attributes}>${content}</td>`;\n}\nexport function template(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<template${attributes}>${content}</template>`;\n}\nexport function textarea(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<textarea${attributes}>${content}</textarea>`;\n}\nexport function tfoot(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<tfoot${attributes}>${content}</tfoot>`;\n}\nexport function th(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<th${attributes}>${content}</th>`;\n}\nexport function thead(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<thead${attributes}>${content}</thead>`;\n}\nexport function time(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<time${attributes}>${content}</time>`;\n}\nexport function title(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<title${attributes}>${content}</title>`;\n}\nexport function tr(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<tr${attributes}>${content}</tr>`;\n}\nexport function u(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<u${attributes}>${content}</u>`;\n}\nexport function ul(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<ul${attributes}>${content}</ul>`;\n}\n// 'var' is a reserved keyword\n// export function var(...args){\n//     const { content, attributes } = argumentative(...args);\n//     return `<var${attributes}>${content}</var>`;\n// }\nexport function video(...args){\n    const { content, attributes } = argumentative(...args);\n    return `<video${attributes}>${content}</video>`;\n}\nexport function fragment(...args){\n    const { content } = argumentative(...args);\n    return content;\n}\n*/"],
  "mappings": "AAAA,IAAMA,EAAc,CAAC,MAAM,OAAO,OAAO,KAAK,MAAM,QAAQ,KAAK,QAAQ,OAAO,OAAO,QAAQ,SAAS,QAAQ,MAAM,IAAI,OAAO,UAAU,UAAU,QAAQ,QAAQ,IAAI,MAAM,MAAM,aAAa,OAAO,SAAS,SAAS,UAAU,OAAO,OAAO,WAAW,OAAO,WAAW,KAAK,MAAM,UAAU,MAAM,SAAS,MAAM,KAAK,KAAK,KAAK,WAAW,aAAa,SAAS,SAAS,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,OAAO,SAAS,OAAO,IAAI,SAAS,MAAM,MAAM,QAAQ,SAAS,KAAK,OAAO,MAAM,OAAO,OAAO,QAAQ,MAAM,WAAW,SAAS,KAAK,WAAW,SAAS,SAAS,IAAI,UAAU,MAAM,WAAW,IAAI,KAAK,KAAK,OAAO,IAAI,OAAO,SAAS,UAAU,SAAS,OAAO,QAAQ,OAAO,SAAS,QAAQ,MAAM,UAAU,MAAM,QAAQ,QAAQ,KAAK,WAAW,WAAW,QAAQ,KAAK,QAAQ,OAAO,QAAQ,KAAK,IAAI,KAAK,MAAM,QAAQ,UAAU,EAEp0BC,EAAgB,IAAIC,IAAS,CAC/B,IAAIC,EAAU,CAAC,EACXC,EAAa,CAAC,EAClB,QAASC,EAAI,EAAGA,EAAIH,EAAK,OAAQG,IAC1B,OAAOH,EAAKG,CAAC,GAAM,SAClBD,EAAa,CACT,GAAGA,EACH,GAAGF,EAAKG,CAAC,CACb,EACK,OAAOH,EAAKG,CAAC,GAAM,SACxBF,EAAQ,KAAKD,EAAKG,CAAC,CAAC,EACf,OAAOH,EAAKG,CAAC,GAAM,YAKrBH,EAAKG,CAAC,EAAE,OACP,QAAQ,IAAIH,EAAKG,CAAC,CAAC,EAEnBF,EAAQ,KAAK,GAAGD,EAAKG,CAAC,CAAC,EAAE,GAIrC,MAAO,CACH,QAASF,EAAQ,KAAK,EAAE,EACxB,WAAY,OAAO,KAAKC,CAAU,EAAE,IAAIE,GACjC,OAAOF,EAAWE,CAAG,GAAM,WACnB,IAAIA,CAAG,MAAMF,EAAWE,CAAG,CAAC,OAEhC,IAAIA,CAAG,KAAKF,EAAWE,CAAG,CAAC,GACrC,EAAE,KAAK,EAAE,CACd,CACJ,EAEMC,EAAOP,EAAY,OAAO,CAACQ,EAAKC,IAAY,CAC9C,IAAMC,EAAaV,EAAY,QAAQS,CAAO,EAAI,GAAK,KAAKA,CAAO,IAAM,GACzE,OAAAD,EAAIC,CAAO,EAAI,IAAIP,IAAS,CACxB,GAAM,CAAE,QAAAC,EAAS,WAAAC,CAAW,EAAIH,EAAc,GAAGC,CAAI,EACrD,OAAGO,GAAW,WAAmBN,EAC1B,IAAIM,CAAO,GAAGL,CAAU,IAAID,CAAO,GAAGO,CAAU,EAC3D,EACOF,CACX,EAAG,CAAC,CAAC,EAEEG,EAAQJ",
  "names": ["allElements", "argumentative", "args", "content", "attributes", "i", "key", "htjs", "acc", "element", "closingTag", "htjs_default"]
}
